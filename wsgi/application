#!/usr/bin/python
import os

try:
    virtenv = os.environ['APPDIR'] + '/virtenv/'
    os.environ['PYTHON_EGG_CACHE'] = os.path.join(virtenv, 'lib/python2.6/site-packages')
    virtualenv = os.path.join(virtenv, 'bin/activate_this.py')
    try:
        execfile(virtualenv, dict(__file__=virtualenv))
    except IOError:
        pass
except Exception:
    pass
#
# IMPORTANT: Put any additional includes below this line.  If placed above this
# line, it's possible required libraries won't be in your searchable path
# 
from re import match
from time import time,sleep
from urllib import urlencode,quote
import urllib2
from mongoengine import *
from os import environ
from os.path import isfile

class Visit(EmbeddedDocument):
    time=IntField(required=True)
    ip=StringField(required=True)

class Osz(Document):
    name=StringField(required=True,primary_key=True)
    long_name=StringField()
    size=IntField()
    file_path=StringField()
    last_visit=IntField()
    l_visit=ListField(EmbeddedDocumentField(Visit))
    meta={'indexes':['-last_visit']}

def DownQuotaExceededException(Exception):
    def __init__(self,content):
        Exception.__ini__(self)
        self.content=content

def get_remote_addr(env):
    # Get the real remote address
    if env.has_key('HTTP_X_FORWARDED_FOR'):
        return env['HTTP_X_FORWARDED_FOR']
    if env.has_key('REMOTE_ADDR'):
        return env['REMOTE_ADDR']
    return '0.0.0.0'

def fetch(n,cookie=None):
    '''
    Fetch osz

    n       the string of "http://osu.ppy.sh/d/([0-9]+n?)",
            for example: "12345" or "12345n"
    cookie  if specified, fetch using the cookie,
            if not, use built-in account to login and fetch

    ret[0]  the full filename of the osz
    ret[1]  the content of the file

    FIXME: Many Exceptions could happen here
    '''
    opener=urllib2.build_opener(
            urllib2.HTTPCookieProcessor(),
            #urllib2.HTTPHandler(debuglevel=1),
            )

    if cookie:
        req=urllib2.Request("http://osu.ppy.sh/d/"+n)
        req.add_header('Cookie',cookie)
        res=opener.open(req)
    else:
        form_fields=dict(
                login="login",
                username="osu_dl_new",
                password="123456",
                redirect="http://osu.ppy.sh/d/"+n
                )
        url="http://osu.ppy.sh/forum/ucp.php?mode=login"
        res=opener.open(url,urlencode(form_fields))

    try:
        filename=res.info().getheader('Content-Disposition').split('"')[1]
    except Exception:
        raise DownQuotaExceededException(res.read())

    return filename,res.read()

def get_osz_path(ip,n,cookie=None):

    # Check if we has it
    d=Osz.objects(name=n)
    if d.count():
        d=d[0]
        while not d.size:
            # It's being fetched now, wait for other workers to finish
            sleep(3)
            d.reload()

        if not isfile(data_dir+'/'+d.file_path):
            # It's removed by someone else

            # Indicates we are fetching
            d.size=None
            d.save()

            # Fetch it again (long time, TODO rewrite with async one here)
            d.long_name,body=fetch(n,cookie)
            d.size=len(body)
            d.file_path=d.long_name

        d.last_visit=time()
        d.l_visit.append(Visit(ip=ip,time=d.last_visit))
        d.save()
        return d.file_path

    # Indicates we are fetching now
    d=Osz(name=n)
    d.save()

    # Fetch (long time, TODO rewrite with async one here)
    d.long_name,body=fetch(n,cookie)
    d.size=len(body)
    d.file_path=d.long_name

    # Write File
    f=file(data_dir+'/'+d.file_path,'w')
    f.write(body)
    f.close()

    # Update DB
    d.save()
    return get_osz_path(ip,n)

def application(env, start_response):
    if env['REQUEST_METHOD']!='GET':
        start_response("400 Method Not Allowed",[('Content-Type',"text/plain")])
        return [""]

    if not match(r'/d/[0-9]+n?',env['PATH_INFO']):
        start_response("404 Not Found",[('Content-Type',"text/plain")])
        return [""]
    n=env['PATH_INFO'][3:]
    if n=="00000":
        import pprint
        start_response("200 OK",[('Content-Type',"text/plain")])
        return [pprint.PrettyPrinter().pformat(env)]

    try:
        osz_path=get_osz_path(get_remote_addr(env),n,env.get('HTTP_COOKIE'))
    except DownQuotaExceededException, e:
        start_response("200 OK",[('Content-Type',"text/html")])
        return [e.content]

    start_response("301 Moved Permanently",[('Location',"data/"+quote(osz_path))])
    return []

data_dir=os.environ['OPENSHIFT_DATA_DIR']
# Connect to DB
connect('osudl',host='127.10.59.129',username='osudl',password='osudl')
